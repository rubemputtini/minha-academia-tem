# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - minhaacademiatem

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Current IP Address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add IP address to SQL Server
        run: az sql server firewall-rule create --resource-group minha-academia-tem --server minhaacademiatem --name ghactions --start-ip-address ${{ steps.ip.outputs.ipv4 }} --end-ip-address ${{ steps.ip.outputs.ipv4 }}
      
      - name: Install EF Tools
        run: dotnet tool install --global dotnet-ef

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: MinhaAcademiaTem
      
      - name: Update database
        run: dotnet ef database update --project ./MinhaAcademiaTem/MinhaAcademiaTem/MinhaAcademiaTem.csproj
        working-directory: MinhaAcademiaTem
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
          StorageConnectionString: ${{ secrets.StorageConnectionString }}
          AdminSettings__AdminEmail: ${{ secrets.AdminSettings__AdminEmail }}
          JwtKey: ${{ secrets.JwtKey }}
          Smtp__Host: ${{ secrets.Smtp__Host }}
          Smtp__Port: ${{ secrets.Smtp__Port }}
          Smtp__UserName: ${{ secrets.Smtp__UserName }}
          Smtp__Password: ${{ secrets.Smtp__Password }}

      - name: Publish backend
        run: dotnet publish -c Release -o ../backend-release
        working-directory: MinhaAcademiaTem


      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: backend-app
          path: backend-release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: backend-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_74FB58242C4F4CF68E4E99366A921BFB }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D70E7898434748F9908475195D5CD572 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0F616208FDB34A308D629576261A31B2 }}
          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'minhaacademiatem'
          slot-name: 'Production'
          package: backend-release
          